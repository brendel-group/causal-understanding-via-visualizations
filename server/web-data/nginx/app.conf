server {
    listen 80;
    server_name yourdomain.tld;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # block everything except GET and POST
        # (HEAD is implicit - its a just special case of GET)
        limit_except GET POST { deny  all; }

        # allow CORS (relevant for local debugging)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET";

        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name mlcloud2.rzimmermann.com;
    server_tokens off;

    error_log logs/error.log debug;

    ssl_certificate /etc/letsencrypt/live/yourdomain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.tld/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/;

    location ~ /\. {
        deny all;
    }

    location / {
        # block everything except GET and POST
        # (HEAD is implicit - its a just special case of GET)
        limit_except GET POST { deny  all; }

        # allow CORS (relevant for local debugging)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET";

        try_files $uri $uri/index.html index.html;
    }

    location /ui/ {
        # block everything except GET and POST
        # (HEAD is implicit - its a just special case of GET)
        limit_except GET POST { deny  all; }

        index index.html;
        autoindex on;
    }

    location = /mturk/bouncer { rewrite ^ /mturk/bouncer/; }
    location /mturk/bouncer { try_files $uri @bouncer; }
    location @bouncer {
      include uwsgi_params;
      uwsgi_pass unix:///tmp/bouncer.sock;
    }
}